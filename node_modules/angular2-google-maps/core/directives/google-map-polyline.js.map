{"version":3,"sources":["core/directives/google-map-polyline.ts"],"names":[],"mappings":"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","file":"core/directives/google-map-polyline.js","sourcesContent":["import {AfterContentInit, ContentChildren, Directive, EventEmitter, OnChanges, OnDestroy, QueryList, SimpleChanges} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {PolyMouseEvent} from '../services/google-maps-types';\nimport {PolylineManager} from '../services/managers/polyline-manager';\n\nimport {SebmGoogleMapPolylinePoint} from './google-map-polyline-point';\n\nlet polylineId = 0;\n/**\n * SebmGoogleMapPolyline renders a polyline on a {@link SebmGoogleMap}\n *\n * ### Example\n * ```typescript\n * import {Component} from 'angular2/core';\n * import {SebmGoogleMap, SebmGooglePolyline, SebmGooglePolylinePoint} from\n * 'angular2-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [SebmGoogleMap, SebmGooglePolyline, SebmGooglePolylinePoint],\n *  styles: [`\n *    .sebm-google-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <sebm-google-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <sebm-google-map-polyline>\n *          <sebm-google-map-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </sebm-google-map-polyline-point>\n *          <sebm-google-map-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </sebm-google-map-polyline-point>\n *      </sebm-google-map-polyline>\n *    </sebm-google-map>\n *  `\n * })\n * ```\n */\n@Directive({\n  selector: 'sebm-google-map-polyline',\n  inputs: [\n    'clickable', 'draggable: polylineDraggable', 'editable', 'geodesic', 'strokeColor',\n    'strokeWeight', 'strokeOpacity', 'visible', 'zIndex'\n  ],\n  outputs: [\n    'lineClick', 'lineDblClick', 'lineDrag', 'lineDragEnd', 'lineMouseDown', 'lineMouseMove',\n    'lineMouseOut', 'lineMouseOver', 'lineMouseUp', 'lineRightClick'\n  ]\n})\nexport class SebmGoogleMapPolyline implements OnDestroy, OnChanges, AfterContentInit {\n  /**\n   * Indicates whether this Polyline handles mouse events. Defaults to true.\n   */\n  clickable: boolean = true;\n\n  /**\n   * If set to true, the user can drag this shape over the map. The geodesic property defines the\n   * mode of dragging. Defaults to false.\n   */\n  draggable: boolean = false;\n\n  /**\n   * If set to true, the user can edit this shape by dragging the control points shown at the\n   * vertices and on each segment. Defaults to false.\n   */\n  editable: boolean = false;\n\n  /**\n   * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n   * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n   * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n   * are maintained relative to the surface of the earth. Defaults to false.\n   */\n  geodesic: boolean = false;\n\n  /**\n   * The stroke color. All CSS3 colors are supported except for extended named colors.\n   */\n  strokeColor: string;\n\n  /**\n   * The stroke opacity between 0.0 and 1.0.\n   */\n  strokeOpacity: number;\n\n  /**\n   * The stroke width in pixels.\n   */\n  strokeWeight: number;\n\n  /**\n   * Whether this polyline is visible on the map. Defaults to true.\n   */\n  visible: boolean = true;\n\n  /**\n   * The zIndex compared to other polys.\n   */\n  zIndex: number;\n\n  /**\n   * This event is fired when the DOM click event is fired on the Polyline.\n   */\n  lineClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the DOM dblclick event is fired on the Polyline.\n   */\n  lineDblClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is repeatedly fired while the user drags the polyline.\n   */\n  lineDrag: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user stops dragging the polyline.\n   */\n  lineDragEnd: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the user starts dragging the polyline.\n   */\n  lineDragStart: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousedown event is fired on the Polyline.\n   */\n  lineMouseDown: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired when the DOM mousemove event is fired on the Polyline.\n   */\n  lineMouseMove: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired on Polyline mouseout.\n   */\n  lineMouseOut: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired on Polyline mouseover.\n   */\n  lineMouseOver: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This event is fired whe the DOM mouseup event is fired on the Polyline\n   */\n  lineMouseUp: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  /**\n   * This even is fired when the Polyline is right-clicked on.\n   */\n  lineRightClick: EventEmitter<PolyMouseEvent> = new EventEmitter<PolyMouseEvent>();\n\n  @ContentChildren(SebmGoogleMapPolylinePoint)\n  private _points: QueryList<SebmGoogleMapPolylinePoint>;\n\n  private static _polylineOptionsAttributes: Array<string> = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex'\n  ];\n\n  private _id: string;\n  private _polylineAddedToManager: boolean = false;\n  private _subscriptions: Subscription[] = [];\n\n  constructor(private _polylineManager: PolylineManager) { this._id = (polylineId++).toString(); }\n\n  /** @internal */\n  ngAfterContentInit() {\n    if (this._points.length) {\n      this._points.forEach((point: SebmGoogleMapPolylinePoint) => {\n        const s = point.positionChanged.subscribe(\n            () => { this._polylineManager.updatePolylinePoints(this); });\n        this._subscriptions.push(s);\n      });\n    }\n    if (!this._polylineAddedToManager) {\n      this._init();\n    }\n    const s =\n        this._points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n    this._subscriptions.push(s);\n    this._polylineManager.updatePolylinePoints(this);\n  }\n\n  ngOnChanges(changes: SimpleChanges): any {\n    if (!this._polylineAddedToManager) {\n      this._init();\n      return;\n    }\n\n    let options: {[propName: string]: any} = {};\n    const optionKeys = Object.keys(changes).filter(\n        k => SebmGoogleMapPolyline._polylineOptionsAttributes.indexOf(k) !== -1);\n    optionKeys.forEach(k => options[k] = changes[k].currentValue);\n    this._polylineManager.setPolylineOptions(this, options);\n  }\n\n  private _init() {\n    this._polylineManager.addPolyline(this);\n    this._polylineAddedToManager = true;\n    this._addEventListeners();\n  }\n\n  private _addEventListeners() {\n    const handlers = [\n      {name: 'click', handler: (ev: PolyMouseEvent) => this.lineClick.emit(ev)},\n      {name: 'dbclick', handler: (ev: PolyMouseEvent) => this.lineDblClick.emit(ev)},\n      {name: 'drag', handler: (ev: MouseEvent) => this.lineDrag.emit(ev)},\n      {name: 'dragend', handler: (ev: MouseEvent) => this.lineDragEnd.emit(ev)},\n      {name: 'dragstart', handler: (ev: MouseEvent) => this.lineDragStart.emit(ev)},\n      {name: 'mousedown', handler: (ev: PolyMouseEvent) => this.lineMouseDown.emit(ev)},\n      {name: 'mousemove', handler: (ev: PolyMouseEvent) => this.lineMouseMove.emit(ev)},\n      {name: 'mouseout', handler: (ev: PolyMouseEvent) => this.lineMouseOut.emit(ev)},\n      {name: 'mouseover', handler: (ev: PolyMouseEvent) => this.lineMouseOver.emit(ev)},\n      {name: 'mouseup', handler: (ev: PolyMouseEvent) => this.lineMouseUp.emit(ev)},\n      {name: 'rightclick', handler: (ev: PolyMouseEvent) => this.lineRightClick.emit(ev)},\n    ];\n    handlers.forEach((obj) => {\n      const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n      this._subscriptions.push(os);\n    });\n  }\n\n  /** @internal */\n  _getPoints(): Array<SebmGoogleMapPolylinePoint> {\n    if (this._points) {\n      return this._points.toArray();\n    }\n    return [];\n  }\n\n  /** @internal */\n  id(): string { return this._id; }\n\n  /** @internal */\n  ngOnDestroy() {\n    this._polylineManager.deletePolyline(this);\n    // unsubscribe all registered observable subscriptions\n    this._subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n"],"sourceRoot":"/source/"}